


;





LeetCode 1148. Article Views I
---------------------------------------------
# Write your MySQL query statement below
SELECT DISTINCT author_id AS id FROM Views
WHERE author_id = viewer_id
ORDER BY author_id ASC


LeetCode 1683. Invalid Tweets
---------------------------------------------
# Write your MySQL query statement below
select tweet_id
from Tweets 
where length(content)>15;


LeetCode 1378. Replace Employee ID With The Unique Identifier
---------------------------------------------
# Write your MySQL query statement below
select eu.unique_id as unique_id , e.name
from employees as e
left join employeeuni as eu
on e.id=eu.id;


LeetCode 1068. Product Sales Analysis I
---------------------------------------------
# Write your MySQL query statement below
select p.product_name,s.year,s.price
from sales as s 
left join product as p
on s.product_id=p.product_id;


LeetCode 1581. Customer Who Visited But Did Not Make Any Transactions
---------------------------------------------
# Write your MySQL query statement below
select  v.customer_id,count(v.customer_id) as count_no_trans
from visits as v
left join  transactions as t
on v.visit_id=t.visit_id
where t.visit_id is null
group by v.customer_id
order by count(v.customer_id);



LeetCode 197. Rising Temperature
---------------------------------------------
# Write your MySQL query statement below
select w1.id
from Weather w1
join Weather w2
where datediff(w1.recordDate,w2.recordDate)=1 && w1.temperature> w2.temperature;


LeetCode 1661. Average Time of Process per Machine
---------------------------------------------
select c.machine_id,round(avg(c.reqtime),3) as processing_time from
(select a.machine_id,abs(b.timestamp-a.timestamp) as reqtime
from activity a 
join activity b
on a.machine_id=b.machine_id and a.process_id=b.process_id 
and a.activity_type="start" and b.activity_type="end") as c
group by c.machine_id ;


LeetCode 577. Employee Bonus
---------------------------------------------
# Write your MySQL query statement below

select e.name, b.bonus
from employee e 
left join bonus  b
on e.empid=b.empid
where b.bonus<1000 or b.bonus is null;


LeetCode 1280. Students and Examinations
---------------------------------------------
select s.student_id,s.student_name,sub.subject_name,count(e.subject_name) as attended_exams
from (students s
join subjects sub)
left join examinations e
on sub.subject_name=e.subject_name and s.student_id=e.student_id
group by s.student_id,s.student_name,sub.subject_name
order by s.student_id,sub.subject_name;



LeetCode 570. Managers with at Least 5 Direct Reports
---------------------------------------------
# Write your MySQL query statement below
select a.name 
from employee a
join employee b
on a.id=b.managerid
group by a.id
having count(*)>=5;


LeetCode 1934. Confirmation Rate
---------------------------------------------
# Write your MySQL query statement below
select s.user_id,round(sum(case when c.action="confirmed" then 1 else 0 end)/count(c.action),2) as confirmation_rate
from signups s 
left join confirmations c
on s.user_id=c.user_id
group by s.user_id


LeetCode 620. Not Boring Movies
---------------------------------------------
# Write your MySQL query statement below
select c.id,c.movie,c.description,c.rating
from Cinema c 
where c.id%2!=0 and c.description!="boring"
order by c.rating desc;


LeetCode 1251. Average Selling Price
---------------------------------------------
# Write your MySQL query statement below
select p.product_id,ifnull(round(sum(p.price*u.units)/sum(u.units),2),0) as average_price
from prices p
left join unitssold u
on p.product_id=u.product_id and u.purchase_date between p.start_date and p.end_date
group by p.product_id;


LeetCode 1075. Project Employees I
---------------------------------------------
# Write your MySQL query statement below
select p.project_id,round(avg(e.experience_years),2)as average_years
from project p 
join employee e 
on p.employee_id=e.employee_id
group by p.project_id;


LeetCode 1633. Percentage of Users Attended a Contest
---------------------------------------------
# Write your MySQL query statement below
select r.contest_id,round(count(distinct r.user_id)/total_users *100,2)as percentage
from register r 
join (select count(user_id) as total_users from users) u 
group by r.contest_id 
order by percentage desc, r.contest_id asc



LeetCode 1211. Queries Quality and Percentage
---------------------------------------------
# Write your MySQL query statement below
select a.query_name,round(avg(a.rating/a.position),2) as quality,round(avg(a.rating<3)*100,2) as poor_query_percentage
from queries a
group by a.query_name



LeetCode 1193. Monthly Transaction I
---------------------------------------------
# Write your MySQL query statement below
select a.query_name,round(avg(a.rating/a.position),2) as quality,round(avg(a.rating<3)*100,2) as poor_query_percentage
from queries a
group by a.query_name



LeetCode 1174. Immediate Food Delivery II
---------------------------------------------
# Write your MySQL query statement below
select round(sum(case when d1.order_date=d2.customer_pref_delivery_date then 1 else 0 end)/count(d1.order_date)*100,2) as immediate_percentage
from (select customer_id,min(order_date) as order_date from delivery group by customer_id) as d1
left join delivery d2
on d1.customer_id=d2.customer_id and d2.order_date=d1.order_date
-- group by d1.customer_id





LeetCode 2356. Number of Unique Subjects Taught by Each Teacher
---------------------------------------------
# Write your MySQL query statement below
SELECT t.teacher_id,count(DISTINCT t.subject_id) as cnt
FROM teacher t 
GROUP BY t.teacher_id;


LeetCode 1141. User Activity for the Past 30 Days I
---------------------------------------------
# Write your MySQL query statement below
select a.activity_date as day,count(distinct a.user_id) as active_users
from activity a
where datediff('2019-07-27',a.activity_date) between 0 and 29
group by a.activity_date





Leetcode 596. Classes More Than 5 Students
---------------------------------------------
select class
from courses
group by class
having count(student)>=5;

LeetCode 1729 Find Followers Count
---------------------------------------------
# Write your MySQL query statement below
select user_id, count(user_id) as followers_count
from followers 
group by user_id
order by user_id








LeetCode 1789. Primary Department for Each Employee
---------------------------------------------
select employee_id ,department_id 
from employee
where primary_flag='Y'

union

select employee_id,department_id
from employee
group by employee_id 
having count(department_id)=1;


LeetCode 610. Triangle judgment
---------------------------------------------
# Write your MySQL query statement below
select x,y,z,(case when (x+y>z && x+z>y && y+z>x) then 'Yes' else 'No' end) as triangle
from triangle 


LeetCode 180. Consecutive Numbers
---------------------------------------------
select distinct num as ConsecutiveNums from (select id,num,lead(num)  over (order by id) as nxt1,lead(num,2) over (order by id) as nxt2 from logs) temp where num=nxt1 && nxt1=nxt2; 





















LeetCode 176. Second Highest Salary
---------------------------------------------
select coalesce((select distinct salary
from employee
order by salary desc
limit 1 offset 1),null) as SecondHighestSalary; 
.




178. Rank Scores
------------------------
SELECT score, DENSE_RANK() OVER (ORDER BY score DESC) as "rank"
FROM scores;


